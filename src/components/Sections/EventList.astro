---
import { getCollection } from "astro:content";
import Card from "../UI/Card.astro";
import Button from "../UI/Button.astro";
import { formatDate } from "../../utils/dateUtils";

export interface Props {
  count?: number;
  showViewAll?: boolean;
}

const { count = 3, showViewAll = true } = Astro.props;

// Get events sorted by date (newest first)
const allEvents = await getCollection("events", ({ data }) => {
  return import.meta.env.PROD ? !data.draft : true;
});

// Sort by date (upcoming first)
const events = allEvents
  .sort((a, b) => new Date(a.data.date).getTime() - new Date(b.data.date).getTime())
  .filter(event => new Date(event.data.date) >= new Date()) // Only future events
  .slice(0, count);
---

<section class="py-16 bg-gray-50">
  <div class="container">
    <div class="text-center mb-12">
      <h2 class="text-3xl md:text-4xl font-bold mb-4">Upcoming Events</h2>
      <p class="text-xl text-gray-600 max-w-3xl mx-auto">
        Join us for these upcoming events and become part of our community
      </p>
    </div>
    
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {events.map((event) => (
        <Card
          title={event.data.title}
          image={{
            src: event.data.image,
            alt: event.data.title
          }}
          href={`/events/${event.slug}`}
        >
          <div class="mb-3 flex items-center text-gray-600">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
            </svg>
            <span>{formatDate(event.data.date)}</span>
          </div>
          
          <div class="mb-3 flex items-center text-gray-600">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
            </svg>
            <span>{event.data.location}</span>
          </div>
          
          <p class="text-gray-700 mb-4">{event.data.summary}</p>
          
          <a href={`/events/${event.slug}`} class="text-primary-600 font-medium hover:text-primary-700">
            Learn More â†’
          </a>
        </Card>
      ))}
    </div>
    
    {showViewAll && events.length > 0 && (
      <div class="mt-12 text-center">
        <Button href="/events" variant="outline">
          View All Events
        </Button>
      </div>
    )}
  </div>
</section>